name: Update Fork

on:
  schedule:
    - cron: '0 0 * * 0'  # Schedule to run every Sunday at midnight
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  updateFork:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Fork Repository
        uses: actions/checkout@v4
        with:
          repository: MiguelRodo/dotfiles
          token: ${{ secrets.MIGUELRODOPAT }}

      - name: Delete Existing PR Branches
        run: |
          for branch in "merged-changes-satvilab" "satvilab-changes-unmerged"; do
            if git ls-remote --exit-code --heads origin $branch; then
              echo "Deleting existing branch: $branch"
              git push origin --delete $branch
            else
              echo "Branch $branch does not exist."
            fi
          done

      - name: Delete Existing PRs
        run: |
          gh pr list --state open --repo MiguelRodo/dotfiles --json number,headRefName \
            --jq '.[] | select(.headRefName=="merged-changes-satvilab" or .headRefName=="satvilab-changes-unmerged") | .number' |
            xargs -I {} gh pr close {} --repo MiguelRodo/dotfiles

      - name: Create New Branch for Merging
        run: |
          git checkout -b merged-changes-satvilab main

      - name: Add Upstream Repository
        run: |
          git remote add upstream https://github.com/SATVILab/dotfiles.git
          git fetch upstream main

      - name: Attempt to Merge with Upstream
        run: |
          git merge -X theirs upstream/main || echo "Automatic merge failed, manual intervention required!" > merge_status.txt

      - name: Handle Merge Conflicts
        run: |
          if [ -f merge_status.txt ]; then
            echo "Creating branch for manual merge."
            git checkout -b satvilab-changes-unmerged upstream/main
            git push origin satvilab-changes-unmerged
            echo "MERGE_STATUS=manual" >> $GITHUB_ENV
          else
            echo "MERGE_STATUS=success" >> $GITHUB_ENV
          fi

      - name: Commit Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Merge upstream changes and resolve conflicts favoring upstream" || echo "No changes to commit"

      - name: Push the Merged Branch to Fork
        run: |
          git push --force origin merged-changes-satvilab

      - name: Check for Differences
        run: |
          git fetch origin main
          if git diff --exit-code main..HEAD; then
            echo "NO_DIFF=true" >> $GITHUB_ENV
          else
            echo "NO_DIFF=false" >> $GITHUB_ENV
          fi

      - name: Create Pull Request for Successful Merge
        if: ${{ env.NO_DIFF == 'false' && env.MERGE_STATUS == 'success' }}
        run: |
          gh pr create \
            --repo MiguelRodo/dotfiles \
            --head merged-changes-satvilab \
            --base main \
            --title "Sync with Upstream" \
            --body "This PR syncs your fork with the upstream repository." \
            --assignee @me
        env:
          GH_TOKEN: ${{ secrets.MIGUELRODOPAT }}

      - name: Create Pull Request for Manual Merge
        if: ${{ env.NO_DIFF == 'false' && env.MERGE_STATUS == 'manual' }}
        run: |
          gh pr create \
            --repo MiguelRodo/dotfiles \
            --head satvilab-changes-unmerged \
            --base main \
            --title "Manual Merge Required: Sync with Upstream" \
            --body "This PR contains upstream changes that could not be merged automatically. Manual resolution is required." \
            --assignee @me
        env:
          GH_TOKEN: ${{ secrets.MIGUELRODOPAT }}
