name: Update Fork

on:
  schedule:
    - cron: '0 0 * * 0'  # Schedule to run every Sunday at midnight
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  updateFork:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Fork Repository
        uses: actions/checkout@v4
        with:
          repository: MiguelRodo/dotfiles
          token: ${{ secrets.MIGUELRODOPAT }}

      - name: Delete Existing PR Branches
        run: |
          for branch in "merged-changes-satvilab" "unmerged-changes-satvilab"; do
            if git ls-remote --exit-code --heads origin $branch; then
              echo "Deleting existing branch: $branch"
              git push origin --delete $branch
            else
              echo "Branch $branch does not exist."
            fi
          done

      - name: Delete Existing PRs
        run: |
          gh pr list --state open --repo MiguelRodo/dotfiles --json number,headRefName \
            --jq '.[] | select(.headRefName=="merged-changes-satvilab" or .headRefName=="unmerged-changes-satvilab") | .number' |
            xargs -I {} gh pr close {} --repo MiguelRodo/dotfiles

      - name: Create New Branch for Merging
        run: |
          echo "Creating a new branch 'merged-changes-satvilab' from 'main'"
          git checkout -b merged-changes-satvilab main

      - name: Add Upstream Repository
        run: |
          echo "Adding upstream repository and fetching 'main' branch"
          git remote add upstream https://github.com/SATVILab/dotfiles.git
          git fetch upstream main

      - name: Merge Upstream Changes
        run: |
          echo "Attempting to merge 'upstream/main' into 'merged-changes-satvilab'"
          
          # Save the current state
          git diff main > /tmp/before_merge.diff

          # Perform the merge
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git merge -X theirs upstream/main --allow-unrelated-histories -m "Merged upstream changes, favouring upstream in case of conflicts" > /tmp/merge_output.txt 2>&1 || echo "Automatic merge failed, manual intervention required!" > /tmp/merge_status.txt

          # Check for differences after merge
          git diff main > /tmp/after_merge.diff

      - name: Check Merge Status
        run: |
          # Compare the diff files
          if [ -s /tmp/after_merge.diff ]; then
            echo "Merge introduced changes."
            echo "MERGE_CHANGE=yes" >> $GITHUB_ENV
          else
            echo "No changes introduced by merge."
            echo "MERGE_CHANGE=no" >> $GITHUB_ENV
          fi

      - name: Handle Merge Conflicts
        run: |
          if [ -f /tmp/merge_status.txt ]; then
            cat /tmp/merge_output.txt
            echo "Merge conflicts detected. Creating branch for manual merge."
            git checkout -b unmerged-changes-satvilab upstream/main
            echo "MERGE_STATUS=failure" >> $GITHUB_ENV
          else
            echo "Merge successful."
            echo "MERGE_STATUS=success" >> $GITHUB_ENV
          fi

      - name: Push the Branch to Fork
        run: |
          if [ "$MERGE_STATUS" == "success" ] && [ "$MERGE_CHANGE" == "yes" ]; then
            echo "Pushing merged branch 'merged-changes-satvilab' to fork"
            git push --force origin merged-changes-satvilab
          elif [ "$MERGE_STATUS" == "failure" ]; then
            git push --force origin unmerged-changes-satvilab
          else
            echo "No changes to push"
          fi
        env:
          MERGE_CHANGE: ${{ env.MERGE_CHANGE }}
          MERGE_STATUS: ${{ env.MERGE_STATUS }}

      - name: Create Pull Request for Successful Merge
        if: ${{ env.MERGE_STATUS == 'success' && env.MERGE_CHANGE == 'yes' }}
        run: |
          echo "Creating PR for successful merge"
          gh pr create \
            --repo MiguelRodo/dotfiles \
            --head merged-changes-satvilab \
            --base main \
            --title "Sync with Upstream" \
            --body "This PR syncs your fork with the upstream repository." \
            --assignee @me
        env:
          GH_TOKEN: ${{ secrets.MIGUELRODOPAT }}

      - name: Create Pull Request for Manual Merge
        if: ${{ env.MERGE_STATUS == 'failure' }}
        run: |
          echo "Creating PR for unsuccessful merge"
          gh pr create \
            --repo MiguelRodo/dotfiles \
            --head unmerged-changes-satvilab \
            --base main \
            --title "Manual Merge Required: Sync with Upstream" \
            --body "This PR contains upstream changes that could not be merged automatically. Manual resolution is required." \
            --assignee @me
        env:
          GH_TOKEN: ${{ secrets.MIGUELRODOPAT }}
