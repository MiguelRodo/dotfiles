#!/usr/bin/env bash

set -e

# Function to display usage
usage() {
    echo "Usage: $0 [-l <log_dir>] <slurm_script> [sbatch_options...]"
    echo "  -l, --log-dir <log_dir> : Directory to save logs (default: _tmp/log/sbatch)"
    echo "  <slurm_script>          : Path to the Slurm script"
    echo "  [sbatch_options...]     : Additional options to pass to sbatch"
    exit 1
}

# Default log directory
log_dir="_tmp/log/sbatch"

# Parse options
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -l|--log-dir) log_dir="$2"; shift 2 ;;
        -h|--help) usage ;;
        --) shift; break ;;
        -*|--*) echo "Unknown option: $1"; usage ;;
        *) slurm_script="$1"; shift; break ;;
    esac
done

# Ensure a Slurm script is provided
if [ -z "$slurm_script" ]; then
    echo "Error: Slurm script path is required."
    usage
fi

# Handle any remaining sbatch options
sbatch_options=("$@")

# Create the log directory if it doesn't exist
mkdir -p "$log_dir"

# Create .gitignore if it doesn't exist and add the log directory to it
if [ ! -f ".gitignore" ]; then
    touch ".gitignore"
fi

# Check if the log directory is already in .gitignore, and if not, add it
if ! grep -q "^${log_dir}" .gitignore; then
    echo "$log_dir" >> .gitignore
fi

# Generate the log file name based on the current date and time
log_file="$log_dir/run_log_$(date '+%Y%m%d_%H%M%S').txt"

# Run sbatch with the provided script and options, redirecting output to the log file
sbatch "${sbatch_options[@]}" -o "$log_file" "$slurm_script"

# Output a message indicating where the log file is located
echo "Slurm job submitted. Logs will be saved to: $log_file"
echo "To view the log file, run: cat $log_file"
