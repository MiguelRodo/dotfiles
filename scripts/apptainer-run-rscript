#!/usr/bin/env bash

set -e

# Function to display usage
usage() {
    echo "Usage: $0 [-s <sif>] [-d <directory>] [<command> ...]"
    echo "  -s, --sif <sif>             : Name of the SIF file to run (optional; defaults to the current directory name)"
    echo "  -d, --directory <directory> : Directory to search for the SIF file (optional)"
    echo "   -n, --no-append            : Donâ€™t append branch to default SIF name"
    echo "  <command>                   : Custom command to run with Rscript (enclose in single quotes to avoid issues with special characters)"
    echo ""
    echo "Description:"
    echo "  This script runs an R script inside an Apptainer container. The command passed as an argument"
    echo "  will be executed as an R script inside the specified container."
    echo ""
    echo "Examples:"
    echo "  $0 -s mycontainer.sif 'print(\"Hello, World\!\")'"
    echo "  $0 -d /custom/directory -s mycontainer.sif 'summary(data)'"
    exit 0
}

# 1) Defaults
SIF_NAME=""
NO_APPEND=false
DIRECTORY=""
CUSTOM_EXPR=()

# lower-case branch and cwd basename
branch=$(apptainer_common_get_branch | tr '[:upper:]' '[:lower:]')
base=$(basename "$PWD"      | tr '[:upper:]' '[:lower:]')

# 2) Parse flags + capture trailing R expression
while [[ $# -gt 0 ]]; do
  case $1 in
    -s|--sif)        SIF_NAME="$2";    shift 2;;
    -d|--directory)  DIRECTORY="$2";   shift 2;;
    -n|--no-append)  NO_APPEND=true;    shift;;
    -h|--help)       usage;;
    --)              shift; CUSTOM_EXPR=( "$@" ); break;;
    -*|--*)          usage;;
    *)               CUSTOM_EXPR+=( "$1" ); shift;;
  esac
done

# require an R expression
if (( ${#CUSTOM_EXPR[@]} == 0 )); then
  echo "Error: no R expression provided." >&2
  usage
fi

# 3) Compute default SIF_NAME if not provided
if [[ -z "$SIF_NAME" ]]; then
  if $NO_APPEND; then
    SIF_NAME="${base}.sif"
  else
    SIF_NAME="${base}-${branch}.sif"
  fi
fi

# 4) Locate the SIF file via common helper
find_args=( --sif "$SIF_NAME" )
[[ -n "$DIRECTORY" ]] && find_args+=( --directory "$DIRECTORY" )

if ! sif_path=$(apptainer_common_find_sif "${find_args[@]}"); then
  echo "Error: could not locate SIF '$SIF_NAME'" >&2
  exit 1
fi

echo "Using SIF: $sif_path"

# 5) Quote and combine the R expression, then run it
#    so that embedded quotes and spaces survive
for i in "${!CUSTOM_EXPR[@]}"; do
  CUSTOM_EXPR[$i]=$(printf "%q" "${CUSTOM_EXPR[$i]}")
done
expr="${CUSTOM_EXPR[*]}"

echo "Running Rscript -e \"$expr\""
apptainer exec "$sif_path" Rscript -e "$expr"

echo "Rscript inside container completed successfully."
