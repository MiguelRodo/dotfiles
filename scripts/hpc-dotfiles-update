#!/usr/bin/env bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Function to display usage information
usage() {
    echo "Usage: $0"
    echo ""
    echo "Description:"
    echo "  This script updates the dotfiles repository on the HPC and re-runs the setup script to apply any updates."
    echo "  It ensures your environment is consistent with the latest version of your dotfiles."
    echo ""
    echo "Example:"
    echo "  $0                          # Update dotfiles"
    exit 0
}

# Parse command-line options
while getopts ":h" opt; do
  case ${opt} in
    h )
      usage
      ;;
    \? )
      echo "Invalid option: -$OPTARG" >&2
      usage
      ;;
  esac
done

ORIG_DIR="$PWD"
PATH_DIR_DOTFILES="$HOME/dotfiles"
echo "Updating dotfiles..."
echo "Current directory: $ORIG_DIR"
echo "Dotfiles directory: $PATH_DIR_DOTFILES"

# Clone or update the dotfiles repository
if [ ! -d "$PATH_DIR_DOTFILES" ]; then
    echo "Cloning dotfiles repository..."
    git clone https://SATVILab/dotfiles.git "$PATH_DIR_DOTFILES"
    echo "Dotfiles repository cloned."
else
    echo "Updating existing dotfiles repository..."
    cd "$PATH_DIR_DOTFILES"
    DEFAULT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    git pull origin "$DEFAULT_BRANCH"
    echo "Dotfiles repository updated."
fi

# Install the dotfiles
echo "Installing dotfiles..."
cd "$HOME"

# Ensure the install script is executable
chmod +x "$HOME/dotfiles/install-hpc.sh"

echo "Running install-hpc.sh..."
"$HOME/dotfiles/install-hpc.sh"
echo "Dotfiles installed."

# Return to the original directory
cd "$ORIG_DIR"
echo "Returned to original directory: $ORIG_DIR"

# Inform the user to source .bashrc manually
if [[ -f "$HOME/.bashrc" ]]; then
    echo "To apply changes, please source your .bashrc or restart your shell:"
    echo "    source ~/.bashrc"
fi

echo "Dotfiles update complete."
