#!/usr/bin/env bash

set -e

# Function to display usage
usage() {
    echo "Usage: $0 [-d <install_dir>] [-b <bin_dir>] [-V <vscode_version>] [-n]"
    echo "  -d, --install-dir <install_dir> : Directory to install VSCode (default: \$HOME/.vscode-linux-x64)"
    echo "  -b, --bin-dir <bin_dir>         : Directory to place symbolic links for code and code-tunnel (default: \$HOME/.local/bin)"
    echo "  -V, --vscode-version <version>  : Version of VSCode to install (default: latest)"
    echo "  -n, --no-link                   : If set, no symbolic links are created"
    echo ""
    echo "Description:"
    echo "  This script downloads and installs Visual Studio Code in a specified directory,"
    echo "  and creates symbolic links to the 'code' and 'code-tunnel' executables in the specified bin directory."
    echo "  It also detects the system architecture and downloads the appropriate version of VS Code."
    echo ""
    echo "Examples:"
    echo "  $0"
    echo "  $0 -d \$HOME/.vscode -b \$HOME/.local/bin -V 1.70.0"
    exit 1
}

# Default values
install_dir="$HOME/.vscode-linux-x64"
bin_dir="$HOME/.local/bin"
vscode_version="latest"
create_link=true

# Parse named parameters
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -d|--install-dir) install_dir="$2"; shift 2 ;;
        -b|--bin-dir) bin_dir="$2"; shift 2 ;;
        -V|--vscode-version) vscode_version="$2"; shift 2 ;;
        -n|--no-link) create_link=false; shift ;; 
        -h|--help) usage ;;
        --) shift; break ;;
        -*|--*) echo "Unknown option: $1"; usage ;;
        *) echo "Unknown argument: $1"; usage ;;
    esac
done

# Detect architecture
ARCH="$(uname -m)"
if [ "${ARCH}" == "x86_64" ]; then
    if [ -f "/lib/ld-musl-x86_64.so.1" ]; then
        ARCH="alpine-x64"
    else
        ARCH="linux-x64"
    fi
elif [ "${ARCH}" == "aarch64" ] || [ "${ARCH}" == "arm64" ]; then
    if [ -f "/lib/ld-musl-aarch64.so.1" ]; then
        ARCH="alpine-arm64"
    else
        ARCH="linux-arm64"
    fi
elif [ "${ARCH}" == "arm" ]; then
    ARCH="linux-armhf"
else
    echo -e "Unsupported architecture: ${ARCH}"
    exit 1
fi

# Construct the download URL based on the architecture and version
DOWNLOAD_URL="https://update.code.visualstudio.com/${vscode_version}/cli-${ARCH}/stable/"

# Ensure bin_dir exists
if [ "$create_link" == "true" ]; then
    mkdir -p "$bin_dir"
fi

# Remove existing installations
if [ -d "$install_dir" ]; then
    echo "Removing existing VS Code installation in: $install_dir"
    rm -rf "$install_dir"
fi
if [ "$create_link" == "true" ]; then
    if [ -f "$bin_dir/code" ]; then
        echo "Removing existing 'code' binary link in: $bin_dir"
        rm -f "$bin_dir/code"
    fi
    if [ -f "$bin_dir/code-tunnel" ]; then
        echo "Removing existing 'code-tunnel' binary link in: $bin_dir"
        rm -f "$bin_dir/code-tunnel"
    fi
fi

# Create a temporary directory in /tmp for the download and extraction
tmp_dir=$(mktemp -d -t vscode-XXXXXX)
echo "Downloading Visual Studio Code from $DOWNLOAD_URL to temporary directory: $tmp_dir"

# Download the specified version of Visual Studio Code
if ! wget "$DOWNLOAD_URL" -O "$tmp_dir/vscode.tar.gz"; then
    echo "Error: Failed to download Visual Studio Code."
    exit 1
fi

# Extract the downloaded archive
echo "Extracting Visual Studio Code..."
if ! tar -xzf "$tmp_dir/vscode.tar.gz" -C "$tmp_dir"; then
    echo "Error: Failed to extract Visual Studio Code."
    exit 1
fi

# Move the extracted VSCode to the install_dir
echo "Installing Visual Studio Code to: $install_dir"
if ! mv "$tmp_dir/VSCode-$ARCH" "$install_dir"; then
    echo "Error: Failed to move Visual Studio Code to install directory."
    exit 1
fi

# Create symbolic links to the executables in bin_dir
if [ "$create_link" == "true" ]; then
    echo "Creating symbolic links in: $bin_dir"
    ln -sf "$install_dir/bin/code" "$bin_dir/code"
    ln -sf "$install_dir/bin/code-tunnel" "$bin_dir/code-tunnel"
fi

# Clean up the temporary directory
echo "Cleaning up temporary files..."
rm -rf "$tmp_dir"

echo "Installation complete!"
echo "VSCode is installed in: $install_dir"
echo "The 'code' and 'code-tunnel' executables are available in: $bin_dir"
echo "To verify, you can run: code --version or code-tunnel --version"
