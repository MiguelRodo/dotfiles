#!/usr/bin/env bash
# apptainer-common.sh — just a collection of functions, no global vars.

# Get list of branches (or fall back to main/master)
apptainer_common_get_branches() {
  if ! git rev-parse --is-inside-work-tree &>/dev/null \
     || ! git symbolic-ref --quiet HEAD 2>/dev/null; then
    echo main master
  else
    git rev-parse --abbrev-ref HEAD | tr '/' '_'
  fi
}

# Emit default <wd>-<branch>.sif plus <wd>.sif
apptainer_common_default_candidates() {
  local base br
  base=$(basename "$PWD" | tr '[:upper:]' '[:lower:]')
  for br in $(apptainer_common_get_branches); do
    echo "${base}-${br}.sif"
  done
  echo "${base}.sif"
}

# Locate the SIF: prints the full path on success, returns 0; returns 1 if none found.
# Arguments (all optional, in any order):
#   --sif           The explicit sif name
#   --directory     A single directory to search (skips cache)
#   --preserve-case  If given, don’t lowercase candidates
apptainer_common_find_sif() {
  local sif_specified=false preserve_case=false sif_file candidates
  local directory=""
  local arg
  while [[ $# -gt 0 ]]; do
    case $1 in
      --sif)           sif_file="$2"; sif_specified=true; shift 2;;
      --directory)     directory="$2";          shift 2;;
      --preserve-case) preserve_case=true;      shift;;
      *)               break ;;
    esac
  done

  # 1) Build candidates[]
  if $sif_specified; then
    sif_file="${sif_file%.sif}.sif"
    $preserve_case || sif_file=$(echo "$sif_file" | tr '[:upper:]' '[:lower:]')
    candidates=( "$sif_file" )
  else
    mapfile -t candidates < <(apptainer_common_default_candidates)
    if ! $preserve_case; then
      for i in "${!candidates[@]}"; do
        candidates[$i]=$(echo "${candidates[$i]}" | tr '[:upper:]' '[:lower:]')
      done
    fi
  fi

  # 2) Build base_dirs[]
  if [[ -n "$directory" ]]; then
    base_dirs=( "$directory" )
  else
    base_dirs=()
    if [[ -n "${APPTAINER_CACHE_DIR:-}" ]]; then
      base_dirs+=( "$APPTAINER_CACHE_DIR" )
    elif [[ -d "/scratch/$USER/.local/share/apptainer/sif" ]]; then
      base_dirs+=( "/scratch/$USER/.local/share/apptainer/sif" )
    fi
    [[ -d "$HOME/.local/share/apptainer/sif" ]] && \
      base_dirs+=( "$HOME/.local/share/apptainer/sif" )
  fi

  # 3) Search
  local cand dir
  for cand in "${candidates[@]}"; do
    for dir in "${base_dirs[@]}"; do
      [[ -f "$dir/$cand" ]] && {
        printf '%s\n' "$dir/$cand"
        return 0
      }
    done
  done

  return 1
}
